<UserControl x:Class="HIB.Outlook.UI.AttachmentControls"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HIB.Outlook.UI"
             xmlns:Converter="clr-namespace:HIB.Outlook.UI.Converter"
             xmlns:cc="clr-namespace:CustomControls;assembly=CustomControls" 
              xmlns:vsm="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:System="clr-namespace:System;assembly=mscorlib" Focusable="True"

             mc:Ignorable="d" Width="775"
              Height="310" 
            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Loaded="UserControl_Loaded" >

    <UserControl.Resources>
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style   TargetType="{x:Type ComboBox}">
            <!--//x:Key="ComboBoxFlatStyle"-->
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="FontFamily" Value="OpenSans"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3,5,0,0" FontSize="10"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent" VerticalContentAlignment="Center"
                     HorizontalAlignment="Left" VerticalAlignment="Top"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="TxtBlockActvityStyle">
            <Setter Property="FontFamily"  Value="OpenSans" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#666666"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="0 5 0 0"/>
        </Style>

        <Converter:WidthConverters x:Key="Width"/>

        <!-- this should better reside in a separate color resource dictionary-->
        <Color x:Key="White">#FFFFFFFF</Color>
        <Color x:Key="GrayUltraLight">#FFF2F2F2</Color>
        <Color x:Key="GrayLight">#FFD4D4D4</Color>
        <Color x:Key="GrayMedium">#FFAAAAAA</Color>
        <Color x:Key="GrayMediumDark">#FF777777</Color>
        <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource White}" />
        <SolidColorBrush x:Key="GrayUltraLightBrush" Color="{StaticResource GrayUltraLight}" />
        <SolidColorBrush x:Key="GrayLightBrush" Color="{StaticResource GrayLight}" />
        <SolidColorBrush x:Key="GrayMediumBrush" Color="{StaticResource GrayMedium}" />
        <SolidColorBrush x:Key="GrayMediumDarkBrush" Color="{StaticResource GrayMediumDark}" />


        <Converter:BoolToVisibilityConverter x:Key="VisibilityConverter"></Converter:BoolToVisibilityConverter>


        <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag"
                                Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
            <Setter Property="Foreground"
            Value="#ADABAB" />
            <Setter Property="Background"
            Value="Transparent" />
            <Setter Property="Width"
            Value="7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                Value="false">
                                <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation"
                                Value="Horizontal">
                                <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width"
                                Value="Auto" />
                                <Setter Property="Height"
                                Value="8" />
                                <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FaderStyle" TargetType="{x:Type TextBlock}">
            <Style.Resources>
                <Storyboard x:Key="FadeStoryboard">
                    <DoubleAnimation Storyboard.TargetProperty="(TextBlock.Opacity)" 
                                From="0" To="1" Duration="0:0:0.5"
                                RepeatBehavior="0:0:5" AutoReverse="True"/>
                </Storyboard>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="Visibility" Value="Visible">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeStoryboard}"/>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="LblHeaderStyle" TargetType="Label">
            <Setter Property="FontFamily"  Value="OpenSans" />
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="txtBlockStyle">
            <Setter Property="FontFamily"  Value="OpenSans" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="25"/>
        </Style>



        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="SeparatorBrush" Value="Transparent"/>
            <Setter Property="SeparatorVisibility" Value="Hidden"/>
            <Setter Property="VerticalContentAlignment"  Value="Center"/>
            <Setter Property="Background" Value="AliceBlue"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid HorizontalAlignment="Stretch" >
                            <Border x:Name="columnHeaderBorder"  BorderThickness="1" Background="#c7eafc" Height="25">
                                <ContentPresenter VerticalAlignment="Center" TextBlock.FontWeight="Bold" TextBlock.FontFamily="Calibri" TextBlock.FontSize="13" TextBlock.Foreground="#666666" Margin="5 5 0 0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BtnMiniMaxPushPinStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ToolTip" Value="Pin"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnUncheckedImage" Source="./Asset/group-2@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                                <Image x:Name="BtnCheckedImage" Source="./Asset/push-pin@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="BtnCheckedImage" Value="Visible"/>
                                <Setter Property="ToolTip" TargetName="BtnCheckedImage" Value="Unpin"/>

                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" TargetName="BtnUncheckedImage" Value="Visible"/>

                            </Trigger>

                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="BtnUncheckedImage" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FavouriteListitem" TargetType="ListBoxItem">
            <Setter Property="Padding" Value="3 3 3 3" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="TextBlock.Foreground" Value="White" TargetName="contentPresenter"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <Grid Background="Transparent">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SelectionStates">
                                    <vsm:VisualState x:Name="Unselected" />
                                    <vsm:VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused"/>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="fillColor" Opacity="0" Fill="#FFBADDE9" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                            <Rectangle x:Name="fillColor2" Opacity="0" Fill="#FF99D047" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                            <ContentPresenter
                              x:Name="contentPresenter"  
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                            <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Listitem" TargetType="ListBoxItem">
            <Setter Property="Padding" Value="3 3 3 3" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="TextBlock.Foreground" Value="White" TargetName="contentPresenter"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <Grid Background="Transparent">
                            <Grid.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard TargetName="PopupDetails" TargetProperty="IsOpen">
                                            <BooleanAnimationUsingKeyFrames  FillBehavior="HoldEnd">
                                                <DiscreteBooleanKeyFrame  KeyTime="00:00:00" Value="True" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard TargetName="PopupDetails" TargetProperty="IsOpen">
                                            <BooleanAnimationUsingKeyFrames  FillBehavior="HoldEnd">
                                                <DiscreteBooleanKeyFrame  KeyTime="00:00:00" Value="False" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Grid.Triggers>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SelectionStates">
                                    <vsm:VisualState x:Name="Unselected" />
                                    <vsm:VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused"/>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="fillColor" Opacity="0" Fill="#FFBADDE9" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                            <Rectangle x:Name="fillColor2" Opacity="0" Fill="#FF99D047" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                            <ContentPresenter
                              x:Name="contentPresenter"  
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                            <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
                            <Popup HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="PopupDetails" HorizontalOffset="{Binding ActualWidth,ElementName=Tab, Converter={StaticResource Width}}" VerticalOffset="-105" AllowsTransparency="True" IsHitTestVisible="False" >
                                <Grid Width="250" Height="175">
                                    <Grid.Background>
                                        <ImageBrush  ImageSource="./Asset/tooltip.png" Stretch="Fill" >

                                        </ImageBrush>
                                    </Grid.Background>
                                    <Grid Margin="30 15 5 10" HorizontalAlignment="Left" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" FontFamily="OpenSans" FontSize="10" Foreground="#333333">
                                            <TextBlock.Inlines>
                                                <Run Text="{Binding AgencyCode}"/>
                                                <Run Text="-"/>
                                                <Run Text="{Binding AgencyName}"/>
                                            </TextBlock.Inlines>
                                        </TextBlock>
                                        <TextBlock Grid.Row="1" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding EpicCode}" TextTrimming="WordEllipsis" ></TextBlock>
                                        <TextBlock Grid.Row="2" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding ClientDescription}" TextTrimming="WordEllipsis"></TextBlock>
                                        <TextBlock Grid.Row="3" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding Street}" TextTrimming="WordEllipsis"></TextBlock>
                                        <Grid  Grid.Row="4">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding City}" TextTrimming="WordEllipsis">
                                                <Run Text=", "></Run>
                                            </TextBlock>
                                            <TextBlock Grid.Column="1" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding State}" TextTrimming="WordEllipsis">
                                                <Run Text=" "/>
                                            </TextBlock>
                                            <TextBlock Grid.Column="2" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding ZipCode}" TextTrimming="WordEllipsis"></TextBlock>
                                        </Grid>

                                        <TextBlock Grid.Row="5" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding Contact}" TextTrimming="WordEllipsis"></TextBlock>
                                    </Grid>
                                </Grid>
                            </Popup>
                            <Border Background="#FFC8EBFC" Margin="0 0 0 0" Height="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ActivityListitem" TargetType="ListBoxItem">
            <Setter Property="Padding" Value="3" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="TextBlock.Foreground" Value="White" TargetName="contentPresenter"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <Grid Background="Transparent" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                            <!--<Grid.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard TargetName="PopupDetails" TargetProperty="IsOpen">
                                            <BooleanAnimationUsingKeyFrames  FillBehavior="HoldEnd">
                                                <DiscreteBooleanKeyFrame  KeyTime="00:00:00" Value="True" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard TargetName="PopupDetails" TargetProperty="IsOpen">
                                            <BooleanAnimationUsingKeyFrames  FillBehavior="HoldEnd">
                                                <DiscreteBooleanKeyFrame  KeyTime="00:00:00" Value="False" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Grid.Triggers>-->
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SelectionStates">
                                    <vsm:VisualState x:Name="Unselected" />
                                    <vsm:VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused"/>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="fillColor" Opacity="0" Fill="#FFBADDE9" IsHitTestVisible="False" RadiusX="1" RadiusY="1" />
                            <Rectangle x:Name="fillColor2" Opacity="0" Fill="#FF99D047" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                            <ContentPresenter
                              x:Name="contentPresenter"  
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                            <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
                            <Popup HorizontalAlignment="Right" VerticalAlignment="Center" x:Name="PopupDetails" HorizontalOffset="{Binding ActualWidth,ElementName=Tab, Converter={StaticResource Width}}" VerticalOffset="-80" AllowsTransparency="True" IsHitTestVisible="False" >
                                <Grid Width="231" Height="125">
                                    <Grid.Background>
                                        <ImageBrush ImageSource="./Asset/tooltip.png" Stretch="Fill" />
                                    </Grid.Background>
                                    <Grid Margin="30 15 5 10" HorizontalAlignment="Left" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" FontFamily="OpenSans" Margin="0,0,0,2" TextWrapping="Wrap" FontSize="10" Foreground="#333333">
                                            <TextBlock.Inlines>
                                                <Run Text="{Binding PolicyCode}"/>
                                                <Run Text="-"/>
                                                <Run Text="{Binding PolicyDisplayDesc}"/>
                                            </TextBlock.Inlines>
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                                            <TextBlock FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="Owner: " TextTrimming="WordEllipsis"></TextBlock>
                                            <TextBlock Grid.Row="1" Margin="0,0,0,0" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding OwnerDescription}" TextTrimming="WordEllipsis" ></TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" Orientation="Horizontal">
                                            <TextBlock FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="Type: " TextTrimming="WordEllipsis"></TextBlock>
                                            <TextBlock Grid.Row="1" Margin="0,0,0,0" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding PolicyType}" TextTrimming="WordEllipsis" ></TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Row="3" Orientation="Horizontal">
                                            <TextBlock FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="Number: " TextTrimming="WordEllipsis"></TextBlock>
                                            <TextBlock Grid.Row="2" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding PolicyNumber}" TextTrimming="WordEllipsis"></TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Row="4" Orientation="Horizontal">
                                            <TextBlock FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="Eff: " TextTrimming="WordEllipsis"></TextBlock>
                                            <TextBlock FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding ShowEffectiveDate}" TextTrimming="WordEllipsis"></TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Row="5" Orientation="Horizontal">
                                            <TextBlock FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="Exp: " TextTrimming="WordEllipsis"></TextBlock>
                                            <TextBlock Grid.Row="4" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding ShowExpirationDate}" TextTrimming="WordEllipsis"></TextBlock>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                            </Popup>

                            <Popup HorizontalAlignment="Right" VerticalAlignment="Center" x:Name="PopupDetailsForNonPolicy" HorizontalOffset="{Binding ActualWidth,ElementName=Tab, Converter={StaticResource Width}}" VerticalOffset="-60" AllowsTransparency="True" IsHitTestVisible="False" >
                                <Grid Width="231" Height="80">
                                    <Grid.Background>
                                        <ImageBrush ImageSource="./Asset/tooltip.png" Stretch="Fill" />
                                    </Grid.Background>
                                    <Grid Margin="30 15 5 10" HorizontalAlignment="Left" VerticalAlignment="Center" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"></RowDefinition>
                                            <RowDefinition ></RowDefinition>
                                            <!--<RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>-->
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" FontFamily="OpenSans" VerticalAlignment="Center" Margin="0,0,0,3" TextWrapping="Wrap" FontSize="10" Foreground="#333333">
                                            <TextBlock.Inlines>
                                                <Run Text="{Binding PolicyCode}"/>
                                                <Run Text="-"/>
                                                <Run Text="{Binding PolicyDisplayDesc}"/>
                                            </TextBlock.Inlines>
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                                            <TextBlock FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="Who/Owner: " TextTrimming="WordEllipsis"></TextBlock>
                                            <TextBlock Grid.Row="1" Margin="0,0,0,0" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding OwnerDescription}" TextTrimming="WordEllipsis" ></TextBlock>
                                        </StackPanel>
                                        <!--<TextBlock Grid.Row="1" Margin="0,0,0,0" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding PolicyType}" TextTrimming="WordEllipsis" ></TextBlock>
                                        <TextBlock Grid.Row="2" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding PolicyNumber}" TextTrimming="WordEllipsis"></TextBlock>
                                        <TextBlock Grid.Row="3" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding Effective}" TextTrimming="WordEllipsis"></TextBlock>
                                        <TextBlock Grid.Row="4" FontFamily="OpenSans" FontSize="10" Foreground="#333333" Text="{Binding Expiration}" TextTrimming="WordEllipsis"></TextBlock>-->
                                    </Grid>
                                </Grid>
                            </Popup>

                            <Border x:Name="brdLine" Background="#FFC8EBFC" Margin="10 0 20 0" Height="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PolicyTypeListItem" TargetType="ListBoxItem">
            <Setter Property="Padding" Value="3" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="TextBlock.Foreground" Value="White" TargetName="contentPresenter"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <Grid Background="Transparent">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SelectionStates">
                                    <vsm:VisualState x:Name="Unselected" />
                                    <vsm:VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused"/>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="fillColor" Opacity="0" Fill="#FFBADDE9" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                            <Rectangle x:Name="fillColor2" Opacity="0" Fill="#FF99D047" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                            <ContentPresenter
                              x:Name="contentPresenter"  
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                            <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
                            <Border Background="#FFCECECE" Margin="10 0 20 0" Height="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TabItemStyle" TargetType="TabItem">
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontFamily" Value="OpenSans"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate >
                        <TextBlock FontWeight="Bold" FontFamily="OpenSans" FontSize="10" TextWrapping="Wrap" Text="{Binding}"  TextAlignment="Center"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid>
                            <Border Name="Border" Margin="0,0,0,0" BorderThickness="1,1,1,1" CornerRadius="0,0,0,0" >
                                <ContentPresenter x:Name="ContentSite"  VerticalAlignment="Center" HorizontalAlignment="Center"  ContentSource="Header" Margin="0,0,0,0" RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <!--<Setter Property="Panel.ZIndex" Value="100" />-->
                                <Setter TargetName="Border" Property="Background" Value="#FF0072cd"/>
                                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="#FFFFFFFF"/>

                                <!--<Setter.Value>
                                                        <ImageBrush  ImageSource="./Asset/tooltip.png"  Stretch="Fill"/>
                                                    </Setter.Value>-->


                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <!--<Setter Property="Panel.ZIndex" Value="100" />-->
                                <Setter TargetName="Border" Property="Background" Value="#FFFFFFFF"/>
                                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="#FF0072cd"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF0072cd"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TabControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TabPanel x:Name="HeaderPanel"
                              Grid.Row="0"
                              Panel.ZIndex="1"
                              Margin="0,0,-2,-1"
                              IsItemsHost="True"
                              KeyboardNavigation.TabIndex="1"
                              Background="Transparent" />

                            <Border x:Name="Border"
                            Grid.Row="1"
                            BorderThickness="1"
                            KeyboardNavigation.TabNavigation="Local"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2">

                                <Border.Background>
                                    <SolidColorBrush Color="White"/>
                                </Border.Background>

                                <Border.BorderBrush>
                                    <SolidColorBrush Color="White"/>
                                </Border.BorderBrush>

                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                          Margin="4"
                                          ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomRBInList"   TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="15" Height="15" Margin="0 0 0 0">
                                    <!--<Ellipse x:Name="Border" StrokeThickness="1">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1"  StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                                                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1" />
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0"  EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                        <GradientStop Color="{DynamicResource ControlMediumColor}"    Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>-->

                                    <Image Source="./Asset/IsCheckedX2.png" Stretch="Fill" x:Name="CheckMark" Visibility="Collapsed" Margin="0 0 0 0"/>
                                    <Image Source="./Asset/UncheckX2.png" Stretch="Fill" x:Name="UncheckMark" Visibility="Collapsed" Margin="0 0 0 0"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">

                                    </VisualState>
                                    <VisualState x:Name="Pressed">

                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UncheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,1,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style   TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="15" Height="15" Margin="0 5 0 0">
                                    <Ellipse x:Name="Border" StrokeThickness="1">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1"  StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                                                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1" />
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0"  EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                        <GradientStop Color="{DynamicResource ControlMediumColor}"    Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>

                                    <Image Source="./Asset/IsCheckedX2.png" Stretch="Fill" x:Name="CheckMark" Visibility="Collapsed" Margin="0 0 0 0"/>
                                    <Image Source="./Asset/UncheckX2.png" Stretch="Fill" x:Name="UncheckMark" Visibility="Collapsed" Margin="0 0 0 0"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">

                                    </VisualState>
                                    <VisualState x:Name="Pressed">

                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UncheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TbtnAssistStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnUncheckedImage" Source="./Asset/assist-grey.png" Stretch="Fill" Visibility="Collapsed"/>
                                <Image x:Name="BtnCheckedImage" Source="./Asset/assist-green.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="BtnCheckedImage" Value="Visible"/>
                                <Setter Property="IsEnabled" Value="True"/>

                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" TargetName="BtnUncheckedImage" Value="Visible"/>
                                <Setter Property="IsEnabled" Value="False"/>
                            </Trigger>

                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="BtnUncheckedImage" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false" >
                                <Setter Property="ToolTip" Value="Assisted  Attach Inactive"></Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true" >
                                <Setter Property="ToolTip" Value="Assisted  Attach Active"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Label" x:Key="lblUnboldStyle">
            <Setter Property="FontFamily"  Value="OpenSans" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style  TargetType="{x:Type Button}" x:Key="BtnClientSearchStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Height="19" Width="19" Source="./Asset/search@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/search@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style  TargetType="{x:Type Button}" x:Key="BtnActivitySearchStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/filter-icon@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/filter-icon@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style  TargetType="{x:Type Button}" x:Key="BtnAddActivityStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="OpenSans"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="14"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image Margin="4,0,0,0" x:Name="BtnImage" Height="8" Width="8" Source="./Asset/add@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <TextBlock Foreground="#005ea9" Margin="5,0,0,0" FontFamily="OpenSans" FontSize="10" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="Activity"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/add-new@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type Button}" x:Key="BtnAssistStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/assist-grey.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/assist-grey.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type Button}" x:Key="BtnAssistActiveStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/assist-green.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/assist-green.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type Button}" x:Key="BtnBookMarkStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/bookmark@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/bookmark@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style  TargetType="{x:Type Button}" x:Key="BtnBookMarkListStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/favourite-list@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/favourite-list@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style  TargetType="{x:Type Button}" x:Key="BtnRefreshStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <!--<Grid.Resources>
                                    <Style x:Key="Spinner" TargetType="Image">
                                        <Setter Property="Height" Value="24" />
                                        <Setter Property="Image.RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform CenterX="12" CenterY="12" />
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation
                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                        From="0"
                                        To="360"
                                        Duration="0:0:1"
                                        RepeatBehavior="Forever" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Resources>-->
                                <Image x:Name="BtnImage" Source="./Asset/refresh-data@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/refresh-data@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style  TargetType="{x:Type Button}" x:Key="BtnResetAllStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/reset-all@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/reset-all@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type Button}" x:Key="BtnNotification">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/notification.png" Stretch="Uniform" Visibility="Visible"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style  TargetType="{x:Type Button}" x:Key="BtnMinimizeStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/minimize@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/minimize@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type Button}" x:Key="BtnAttachmentOnlyStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/attach-only.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/attach@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type Button}" x:Key="BtnAttachmentAndDeleteOnlyStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/attach-and-delete-only.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/attach@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type Button}" x:Key="BtnAttachmentStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/attach@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/attach@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>

                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type Button}" x:Key="BtnDeleteAttachmentStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/attach-and-delete@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/attach-and-delete@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style  TargetType="{x:Type Button}" x:Key="BtnMaximizeStyle">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Image x:Name="BtnImage" Source="./Asset/group-1@2x.png" Stretch="Fill" Visibility="Visible"/>
                                <Image x:Name="BtnDisableImage" Source="./Asset/group-1@2x.png" Stretch="Fill" Visibility="Collapsed"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/> "{Binding Tag, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="BtnImage" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BtnDisableImage" Value="Collapsed"/>
                        </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox" >
            <Setter Property="FontFamily"  Value="OpenSans" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="25"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontFamily"  Value="OpenSans" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>



    </UserControl.Resources>
    <!--<ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" >-->
    <Grid>

        <Grid x:Name="grdError" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.5" Background="LightGray" Panel.ZIndex="998"  Visibility="Collapsed" >
            <TextBlock x:Name="TblError" Text="Synchronization of EPIC data in progress. Please wait..." VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="DarkRed" FontSize="20" TextWrapping="Wrap" TextAlignment="Center" Margin="5 ,0,5, 0 " Panel.ZIndex="999" Opacity="1" FontWeight="Bold" />
        </Grid>
        <Grid VerticalAlignment="Stretch" >

            <Border BorderBrush="#FF3F64BF" BorderThickness="2" VerticalAlignment="Top" HorizontalAlignment="Stretch" >
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                    <Grid x:Name="grdMaxHeader" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="23" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="20" />
                        </Grid.RowDefinitions>
                        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#0072cd" >
                            <Grid Margin="5 -2 20 0" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="2"/>
                                    <ColumnDefinition Width="355"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid Grid.RowSpan="2" Margin="0,0,0,0" VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="30"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0" HorizontalAlignment="Stretch"  >
                                            <TextBox TabIndex="0" Height="20" VerticalContentAlignment="Center" FontSize="10" FontFamily="OpenSans" HorizontalAlignment="Stretch" Name="waterMarkTextBox" KeyDown="waterMarkTextBox_KeyDown" TextChanged="waterMarkTextBox_TextChanged" Margin="0 0 0 0"/>
                                            <Label IsHitTestVisible="False" Content="Client Lookup" FontSize="10" FontFamily="OpenSans" FontWeight="Light" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-2,2,0,0" Foreground="#FF9d9d9d">
                                                <Label.Style>
                                                    <Style TargetType="{x:Type Label}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Text, ElementName=waterMarkTextBox}" Value="">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Label.Style>
                                            </Label>
                                        </Grid>

                                        <!--<cc:WaterMarkTextBox x:Name="waterMarkTextBox" WaterMark="Client Lookup" Height="30"  VerticalContentAlignment="Center" HorizontalAlignment="Stretch" TextChanged="TextBox_TextChanged" Margin="0 0 60 0" />-->
                                        <Button Name="clientLookupSearch" Click="clientLookupSearch_Click" Grid.Column="1" Style="{StaticResource BtnClientSearchStyle}" ToolTip="Search" BorderThickness="0" BorderBrush="Transparent" Width="19" Height="19" Content="Search" HorizontalAlignment="Left" Margin="0 0 0 0">
                                        </Button>
                                    </Grid>

                                    <Border Background="#FF91a7e0" HorizontalAlignment="Right" Width="1" Margin="0 5 -5 5"/>
                                    <Grid Grid.Column="2" Margin="0 0 0 0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="0"/>
                                            <ColumnDefinition Width="auto" x:Name="ColumnDefActivity"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0">
                                            <Grid  Grid.Column="0" HorizontalAlignment="Stretch">
                                                <TextBox TabIndex="1" Height="20" VerticalContentAlignment="Center" FontSize="10" FontFamily="OpenSans" HorizontalAlignment="Stretch" Name="activityFilterTextBox" KeyDown="activityFilterTextBox_KeyDown" TextChanged="activityFilterTextBox_TextChanged" Margin="0 0 30 0"/>
                                                <Label IsHitTestVisible="False" Content="Activity Lookup" FontSize="10" FontFamily="OpenSans" FontWeight="Light" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-2,2,0,0" Foreground="#FF9d9d9d">
                                                    <Label.Style>
                                                        <Style TargetType="{x:Type Label}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=activityFilterTextBox}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>
                                            </Grid>
                                            <!--<cc:WaterMarkTextBox WaterMark="Activity Lookup" Height="30" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" TextChanged="TextBox_TextChanged" Margin="10 0 50 0" />-->
                                            <Button x:Name="btnActivitySearch" Style="{StaticResource BtnActivitySearchStyle}" ToolTip="Filter" BorderThickness="0" BorderBrush="Transparent" Grid.Column="0" Width="21" Height="21" Content="Search" HorizontalAlignment="Right" Margin="0 0 9  0" Click="btnActivitySearch_Click"></Button>
                                        </Grid>

                                    </Grid>
                                </Grid>
                                <Grid Width="auto" Grid.Column="2" Grid.RowSpan="2" Margin="0,0,0,0" VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Button TabIndex="18" Style="{StaticResource BtnAddActivityStyle}" Grid.Column="0" IsEnabled="False" FontFamily="OpenSans" Background="White"  Height="20" Width="57" BorderBrush="Transparent" ToolTip="Activity" BorderThickness="0" Content="Search" VerticalAlignment="Top" HorizontalAlignment="Left" x:Name="BtnAddActivity" Click="BtnAddActivity_Click" Margin="0 0 0 0">
                                    </Button>
                                    <Button TabIndex="19" x:Name="TbtnAttachmentAssist" Loaded="TbtnAttachmentAssist_Loaded" Style="{StaticResource BtnAssistStyle}" ToolTip="Assisted Attach Inactive" Grid.Column="1" HorizontalAlignment="Left" BorderThickness="0" Background="Transparent"   BorderBrush="Transparent" Width="20" Height="20"   Margin="0,0,0,0" VerticalAlignment="Center">
                                    </Button>
                                    <Button TabIndex="20" x:Name="TbtnAttachmentAssistActive" Style="{StaticResource BtnAssistActiveStyle}" Visibility="Collapsed" ToolTip="Assisted Attach Active"   Grid.Column="1" HorizontalAlignment="Left" BorderThickness="0" Background="Transparent" Click="TbtnAttachmentAssist_Click"   BorderBrush="Transparent" Width="20" Height="20"   Margin="0,0,0,0" VerticalAlignment="Center">
                                    </Button>
                                    <Grid  Grid.Column="2" HorizontalAlignment="Left" Margin="-30 2 5 0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <!--<ToggleButton Grid.Column="0"  x:Name="TbtnFavouites" HorizontalAlignment="Left" Click="TbtnFavouites_Click" BorderThickness="0" Background="Transparent"  Style="{StaticResource TbtnBookMarkStyle}" BorderBrush="Transparent" Width="40" Height="30" Content="Search" Panel.ZIndex="100"  Margin="50,-2,0,0" VerticalAlignment="Top"></ToggleButton>-->
                                        <Button TabIndex="21" Grid.Column="0" ToolTip="Add Favorite" HorizontalAlignment="Left" x:Name="TbtnFavouites" Click="TbtnFavouites_Click" BorderThickness="0" Style="{StaticResource BtnBookMarkStyle}" BorderBrush="Transparent"  Width="20" Height="20" Content="Search"  Margin="0 -3 0 0"></Button>
                                        <Button TabIndex="22" Grid.Column="1" ToolTip="Favorite List" HorizontalAlignment="Left" x:Name="btnFavouriteList" Click="btnFavouriteList_Click" BorderThickness="0" Style="{StaticResource BtnBookMarkListStyle}" BorderBrush="Transparent"  Width="20" Height="20" Content="Search"  Margin="0 -3 0 0"></Button>
                                    </Grid>

                                    <StackPanel Grid.Column="3" Orientation="Horizontal" HorizontalAlignment="Left" Margin="-30 2 0 0">
                                        <Button TabIndex="23" HorizontalAlignment="Left" ToolTip="Refresh Data" x:Name="btnRefresh" Click="btnRefresh_Click"  BorderThickness="0" Style="{StaticResource BtnRefreshStyle}"  BorderBrush="Transparent"  Width="20" Height="20" Content="Search"  Margin="0 -3 0 0"></Button>
                                        <Button TabIndex="24" HorizontalAlignment="Left" x:Name="btnSettings" Click="btnSettings_Click" ToolTip="Reset All"  BorderThickness="0" Style="{StaticResource BtnResetAllStyle}" BorderBrush="Transparent"  Width="20" Height="20" Content="Search"  Margin="0 -3 0 0"></Button>
                                        <Border Cursor="Hand" Name="FailedBorder" PreviewMouseLeftButtonDown="FailedBorder_PreviewMouseLeftButtonDown" HorizontalAlignment="Left" Visibility="Visible"  Width="25" Height="20" Margin="20 -3 0 0" Background="White" CornerRadius="2" BorderBrush="DarkBlue" BorderThickness="1">
                                            <Grid >
                                                <Button TabIndex="25" Height="15" Width="20" HorizontalAlignment="Left"  x:Name="btnNotification"  ToolTip="Failed Attachments"  BorderThickness="0" Style="{StaticResource BtnNotification}" BorderBrush="Transparent" Margin="0,0,0,0"  ></Button>
                                                <Border Name="failedNotificationBorder" Visibility="Visible" VerticalAlignment="Top" HorizontalAlignment="Left" Background="Red" CornerRadius="4" Margin="5,2,2,0"  >
                                                    <TextBlock Width="15" Name="FailedNotification" Foreground="White" FontSize="8" Margin="3 -1"/>
                                                </Border>
                                            </Grid>
                                        </Border>

                                    </StackPanel>

                                    <StackPanel Grid.Column="4" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 -2 -20 0">
                                        <Button Grid.Column="0" HorizontalAlignment="Left" ToolTip="Minimize" x:Name="btnMin" Click="BtnMin_Click"  BorderThickness="0" Style="{StaticResource BtnMinimizeStyle}"  BorderBrush="Transparent"  Width="20" Height="20" Content="Search"  Margin="0 -3 0 0"></Button>

                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>

                        <Grid Grid.Row="2" VerticalAlignment="Stretch" Margin="5 0 5 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="0"></ColumnDefinition>
                                <ColumnDefinition  MaxWidth="380"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Name="leftMainGrid" Height="250">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="0"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TabControl Grid.Row="2" x:Name="Tab" FontFamily="OpenSans" SelectionChanged="Tab_SelectionChanged" FontSize="10" HorizontalAlignment="Stretch" >
                                    <TabItem  x:Name="ActiveTab" HorizontalAlignment="Stretch" Style="{StaticResource TabItemStyle}"  Header="Active Clients" Width="{Binding ActualWidth,ElementName=Tab,Converter={StaticResource Width} ,ConverterParameter=TabItemWidth}" >
                                        <TabItem.Content>
                                            <Border   Grid.Column="2" BorderBrush="#FFC2E5F5" BorderThickness="1" Margin="-4 -5 1 -4" >
                                                <Grid>
                                                    <ListBox x:Name="LstActiveClient" Height="auto" SelectionChanged="LstActiveClient_SelectionChanged"  KeyboardNavigation.TabNavigation="Cycle" ItemsSource="{Binding MyActiveClientFilteredItems}" Grid.Row="1" ItemContainerStyle="{StaticResource Listitem}" BorderBrush="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden" >
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid  Height="30" Width="{Binding ActualWidth,ElementName=LstActiveClient}">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                                                    </Grid.ColumnDefinitions>
                                                                    <TextBlock Text="{Binding EpicCode}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Width="Auto" />
                                                                    <TextBlock  Grid.Column="1" Text="{Binding ClientDescription}" TextTrimming="WordEllipsis" VerticalAlignment="Center"   Margin="10 0 0 0"/>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>
                                                    <Label Name="activeClientErroLabel" IsHitTestVisible="False" Content="No records found" FontWeight="Light" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="-2,12,0,0" Foreground="#FF9d9d9d">
                                                        <Label.Style>
                                                            <Style TargetType="{x:Type Label}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Items.Count, ElementName=LstActiveClient}" Value="0">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Label.Style>
                                                    </Label>
                                                </Grid>
                                            </Border>
                                        </TabItem.Content>
                                    </TabItem>
                                    <TabItem x:Name="InactiveTab" Header="In-active Clients" HorizontalAlignment="Stretch"  Style="{StaticResource TabItemStyle}" Margin="0 0 0 0"  Width="{Binding ActualWidth,ElementName=Tab,Converter={StaticResource Width} ,ConverterParameter=TabItemWidth}">
                                        <TabItem.Content>
                                            <Border   Grid.Column="2" BorderBrush="#FFC2E5F5" BorderThickness="1" Margin="-4 -5 1 -4" >
                                                <Grid>
                                                    <ListBox x:Name="LstInActiveClient" Height="auto" SelectionChanged="LstInActiveClient_SelectionChanged" Grid.Row="1" ItemsSource="{Binding MyInActiveClientFilteredItems}"  ItemContainerStyle="{StaticResource Listitem}" BorderBrush="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden" >
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid  Height="30" Width="{Binding ActualWidth,ElementName=LstActiveClient}">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                                                    </Grid.ColumnDefinitions>
                                                                    <TextBlock Text="{Binding EpicCode}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Width="Auto" />
                                                                    <TextBlock  Grid.Column="1" Text="{Binding ClientDescription}" TextTrimming="WordEllipsis" VerticalAlignment="Center"   Margin="10 0 0 0"/>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>
                                                    <Label Name="InactiveClientErroLabel" IsHitTestVisible="False" Content="No records found" FontWeight="Light" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="-2,12,0,0" Foreground="#FF9d9d9d">
                                                        <Label.Style>
                                                            <Style TargetType="{x:Type Label}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Items.Count, ElementName=LstInActiveClient}" Value="0">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Label.Style>
                                                    </Label>
                                                </Grid>
                                            </Border>
                                        </TabItem.Content>
                                    </TabItem>
                                </TabControl>
                                <TabControl Grid.Row="2" Grid.Column="2" FontFamily="OpenSans" SelectionChanged="ActivitiesTab_SelectionChanged" FontSize="10" x:Name="ActivitiesTab" HorizontalAlignment="Stretch" Margin="0,-0.5,0,0" >
                                    <TabItem  x:Name="OpenActivityTab" HorizontalAlignment="Stretch" Style="{StaticResource TabItemStyle}" Header="Open Activities" Width="{Binding ActualWidth,ElementName=Tab,Converter={StaticResource Width} ,ConverterParameter=TabItemWidth}" >
                                        <TabItem.Content>
                                            <Border   Grid.Column="2" BorderBrush="#FFC2E5F5" BorderThickness="1" Margin="-4 -5 1 -4" >
                                                <Grid>
                                                    <ListBox x:Name="ActiveActivityList" Grid.Row="1" ItemsSource="{Binding OpenActivitiesFilteredItems,UpdateSourceTrigger=PropertyChanged}"  SelectionChanged="ActiveActivityList_SelectionChanged" ItemContainerStyle="{StaticResource ActivityListitem}" BorderBrush="Transparent"  ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid  Height="30" Width="{Binding ActualWidth,ElementName=ActiveActivityList}">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                                                    </Grid.ColumnDefinitions>
                                                                    <TextBlock Text="{Binding PolicyCode}"  VerticalAlignment="Center" />
                                                                    <TextBlock Grid.Column="1" Text="{Binding PolicyDisplayDesc}" VerticalAlignment="Center" Margin="10 0 0 0" TextTrimming="WordEllipsis" />
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>
                                                    <Label Name="OpenActivityErroLabel" IsHitTestVisible="False" Content="No records found" FontWeight="Light" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="-2,12,0,0" Foreground="#FF9d9d9d">
                                                        <Label.Style>
                                                            <Style TargetType="{x:Type Label}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Items.Count, ElementName=ActiveActivityList}" Value="0">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Label.Style>
                                                    </Label>
                                                </Grid>

                                            </Border>
                                        </TabItem.Content>
                                    </TabItem>
                                    <TabItem x:Name="ClosedActivityTab" Header="Closed Activities" HorizontalAlignment="Stretch"   Style="{StaticResource TabItemStyle}" Margin="0 0 0 0"  Width="{Binding ActualWidth,ElementName=Tab,Converter={StaticResource Width} ,ConverterParameter=TabItemWidth}">
                                        <TabItem.Content>
                                            <Border   Grid.Column="2" BorderBrush="#FFC2E5F5" BorderThickness="1" Margin="-4 -5 1 -4" >
                                                <Grid>
                                                    <ListBox x:Name="InActiveActivityList" SelectionChanged="InActiveActivityList_SelectionChanged" ItemsSource="{Binding ClosedActivitiesFilteredItems,UpdateSourceTrigger=PropertyChanged}"  ItemContainerStyle="{StaticResource ActivityListitem}" BorderBrush="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden" vsm:Grid.ColumnSpan="2" Margin="0,0,-0.2,0.2" >
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid  Height="30" Width="{Binding ActualWidth,ElementName=InActiveActivityList}">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                                                    </Grid.ColumnDefinitions>
                                                                    <TextBlock Text="{Binding PolicyCode}"  VerticalAlignment="Center" />
                                                                    <TextBlock Grid.Column="1" Text="{Binding PolicyDisplayDesc}" VerticalAlignment="Center" Margin="10 0 10 0" TextTrimming="WordEllipsis" />
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>
                                                    <Label Name="ClosedActivityErroLabel" IsHitTestVisible="False" Content="No records found" FontWeight="Light" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="-2,12,0,0" Foreground="#FF9d9d9d" >
                                                        <Label.Style>
                                                            <Style TargetType="{x:Type Label}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Items.Count, ElementName=InActiveActivityList}" Value="0">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Label.Style>
                                                    </Label>
                                                </Grid>
                                            </Border>
                                        </TabItem.Content>
                                    </TabItem>
                                </TabControl>
                            </Grid>

                            <Grid Grid.Column="2" Name="RightPaneGrid" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="2"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="0"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="0"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="5"></RowDefinition>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="10"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Label Content="Policy Year:" FontFamily="OpenSans" FontSize="10" Grid.Row="0" Grid.Column="0"/>
                                <ListView TabIndex="2" x:Name="LstPolicyList" FontFamily="OpenSans" FontSize="10" Grid.Row="0" Grid.Column="2" SelectionChanged="LstPolicyList_SelectionChanged" BorderBrush="Transparent" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="IsSelected" Value="{Binding Content.IsSelected, Mode=TwoWay, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <ContentPresenter/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <RadioButton IsTabStop="False" x:Name="RBPolicyYear" Style="{StaticResource CustomRBInList}" VerticalAlignment="Stretch" Margin="0 0 15 0"  IsChecked="{Binding IsSelected}" Content="{Binding Description}" Checked="RBPolicyYear_Checked" GroupName="PolicyYear"/>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" Margin="0 1 0 0"/>
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                </ListView>
                                <Grid  Grid.Row="2" Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition Width="5"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock FontWeight="SemiBold" Grid.Column="0" VerticalAlignment="Center" Text="Policy Type:" Margin="5,2,0,0" FontFamily="OpenSans" FontSize="10"/>
                                    <!--<TextBlock Grid.Column="1" Text="*" Foreground="Red" HorizontalAlignment="Left" FontFamily="OpenSans" Margin="0,7,0,0" FontSize="10" FontWeight="Bold" Visibility="{Binding IsChecked,ElementName=RBPolicyType,Converter={StaticResource VisibilityConverter}}" />-->
                                </Grid>

                                <Grid Grid.Column="2" Grid.Row="2" Margin="0 2 20 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton TabIndex="3" x:Name="RBCustomPolicyType" FontFamily="OpenSans" FontSize="10"  Click="RBCustomPolicyType_Click" Content="(none)" GroupName="PolicyType" IsChecked="True" vsm:Grid.ColumnSpan="2" Margin="2,0,80.8,-0.8" vsm:Grid.RowSpan="2"/>
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,0" vsm:Grid.ColumnSpan="2" >
                                        <RadioButton FontFamily="OpenSans" FontSize="10"  x:Name="RBPolicyType" Checked="RBPolicyType_Checked"  GroupName="PolicyType" />
                                        <TextBox TabIndex="4" FontFamily="OpenSans" FontSize="10" VerticalContentAlignment="Center" Height="22" x:Name="lblPolicyType" IsEnabled="{Binding IsChecked,ElementName=RBPolicyType}" Text="{Binding PolicyTypeSelectedValue,Mode=TwoWay}"  IsHitTestVisible="True" Width="75" VerticalAlignment="Center" BorderBrush="#FFc6c6c6" BorderThickness="1" LostFocus="LblPolicyType_LostFocus">

                                        </TextBox>
                                    </StackPanel>
                                    <Button  TabIndex="5"  x:Name="BtnPolicyType" FontFamily="OpenSans" FontSize="10"  IsEnabled="{Binding IsChecked,ElementName=RBPolicyType}" VerticalContentAlignment="Center" Content="Policy Type List" Foreground="White" Grid.Column="2" BorderBrush="Black" BorderThickness="1" Height="22" Click="BtnPolicyType_Click"  Margin="36.2,0,0,0.2"  Background="#FFDE9E3C" >

                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
                                                <!--<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>-->
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>

                                                <Setter Property="Padding" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border x:Name="border" CornerRadius="3"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                                <ContentPresenter VerticalAlignment="Center" Margin="10,0,10,0" TextBlock.FontWeight="SemiBold" ></ContentPresenter>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsDefaulted" Value="true">
                                                                    <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="true">

                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="true">
                                                                    <Setter Property="Visibility" TargetName="border" Value="Visible"/>

                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="false">
                                                                    <Setter Property="Opacity" Value="0.5"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>

                                    </Button>
                                </Grid>



                                <Border Name="descriptionBorder" Margin="0,5,0,3" Width="370" Grid.Row="4" Grid.RowSpan="4" Grid.ColumnSpan="4" BorderBrush="#c7eafc" BorderThickness="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Name="descriptionNamePanel" Margin="-2,10,0,0" Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                                            <Label Content="Description:" FontFamily="OpenSans" FontSize="10"  Grid.Column="0"/>
                                            <Label Content="*" Foreground="Red" FontFamily="OpenSans" FontSize="10" FontWeight="Bold" Margin="-8 0 0 0"/>
                                        </StackPanel>
                                        <Grid Name="descriptionValuePanel" Margin="0,10,0,0" Grid.Row="0" Grid.Column="1" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="19.946"></ColumnDefinition>
                                                <vsm:ColumnDefinition Width="95.054"/>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <RadioButton TabIndex="6" FontFamily="OpenSans" Margin="2,0,0,0" FontSize="10" x:Name="rbCustom" Checked="rbCustom_Checked" Content="Custom" GroupName="Desc" IsChecked="True" HorizontalAlignment="Left" Width="60"/>
                                            <RadioButton FontFamily="OpenSans" FontSize="10" x:Name="rbEmailDesc" Checked="rbEmailDesc_Checked" Content="Use Email Subj." GroupName="Desc" Grid.Column="1" Margin="8 0 0 0" vsm:Grid.ColumnSpan="2"/>
                                            <RadioButton FontFamily="OpenSans" FontSize="10" x:Name="rbActivityDec" Checked="rbActivityDec_Checked" Content="Use Activity Desc." GroupName="Desc" vsm:Grid.Column="3" Margin="6 0 0 0"/>
                                        </Grid>
                                        <Grid Name="descriptionValueGrid" Margin="5,0,0,10" Grid.Row="1" Grid.ColumnSpan="3">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="35"/>
                                                <ColumnDefinition Width="35"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Visibility="Hidden" Width="auto" Name="policyYearTextBlock" Margin="5,0,0,0" FontFamily="OpenSans" FontSize="10" Text="" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <TextBlock Visibility="Hidden" Width="auto" Margin="5,0,0,0" Grid.Column="1" FontFamily="OpenSans" FontSize="10" Name="policyTypeTextBlock" Text="" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <TextBox TabIndex="7" x:Name="txtDesc"  FontFamily="OpenSans" FontSize="10" Height="22" MaxLength="100" Grid.Column="2" Grid.Row="6" Margin="10 0 0 0" Width="275"  HorizontalAlignment="Left"  VerticalContentAlignment="Center">
                                            </TextBox>
                                        </Grid>
                                    </Grid>



                                </Border>



                                <!--IsEnabled="{Binding IsChecked,ElementName=rbCustom}"-->


                                <Grid Grid.Row="8" Margin="0 0 0 0" Grid.ColumnSpan="3" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1.28*"></ColumnDefinition>
                                        <ColumnDefinition Width="5"></ColumnDefinition>
                                        <ColumnDefinition Width="1*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>

                                    <Border  BorderBrush="#FFC2E5F5" BorderThickness="1" VerticalAlignment="Top" Margin="5,0,0,0" Grid.RowSpan="3">
                                        <Grid Margin="5" VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="0"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="5"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="5"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="5"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <StackPanel Orientation="Horizontal" >
                                                <Label Content="Folders" FontFamily="OpenSans"  FontSize="10" VerticalAlignment="Center" />
                                                <Label Content="*" FontFamily="OpenSans" FontSize="10" Foreground="Red" FontWeight="Bold" Margin="-8 0 0 0"/>
                                            </StackPanel>
                                            <Border x:Name="brdmainFolderComboBox" BorderBrush="Red" BorderThickness="1" Visibility="Collapsed" Grid.Row="2"/>
                                            <ComboBox TabIndex="8" Grid.Row="2" Name="mainFolderComboBox" Text="Select Folder" IsEditable="True" 
          IsTextSearchEnabled="True" 
          IsTextSearchCaseSensitive="False" TextSearch.TextPath ="FolderName"
          StaysOpenOnEdit="True" FontFamily="OpenSans" FontSize="10"  VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="25" VerticalContentAlignment="Center" SelectionChanged="mainFolderComboBox_SelectionChanged">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Label Content="{Binding FolderName}" FontFamily="OpenSans" FontSize="10" FontWeight="Normal" Width="auto" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <!--<ComboBoxItem>
                                                <Label Content="Select Folder" VerticalContentAlignment="Center" Style="{StaticResource lblUnboldStyle}"/>
                                            </ComboBoxItem>-->
                                            </ComboBox>
                                            <Border x:Name="brdsubFolder1ComboBox" BorderBrush="Red" BorderThickness="1" Grid.Row="4" Visibility="Collapsed" />
                                            <ComboBox TabIndex="9" IsEditable="True" 
          IsTextSearchEnabled="True" 
          IsTextSearchCaseSensitive="False" TextSearch.TextPath ="FolderName"
          StaysOpenOnEdit="True" Grid.Row="4" VerticalAlignment="Center" Name="subFolder1ComboBox" FontFamily="OpenSans" FontSize="10" IsEnabled="False" HorizontalAlignment="Stretch" Height="25" VerticalContentAlignment="Center" SelectionChanged="subFolder1ComboBox_SelectionChanged">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Label Content="{Binding FolderName}"  FontFamily="OpenSans" FontSize="10" FontWeight="Normal" Width="auto" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <!--<ComboBoxItem>
                                                <Label Content="Select Sub-Folder1" Style="{StaticResource lblUnboldStyle}" VerticalContentAlignment="Center"/>
                                            </ComboBoxItem>-->
                                            </ComboBox>
                                            <Border x:Name="brdsubFolder2ComboBox" BorderBrush="Red" BorderThickness="1" Grid.Row="6" Visibility="Collapsed" />
                                            <ComboBox TabIndex="10" Grid.Row="6" IsEditable="True" 
          IsTextSearchEnabled="True" 
          IsTextSearchCaseSensitive="False" TextSearch.TextPath ="FolderName"
          StaysOpenOnEdit="True" VerticalAlignment="Center" Name="subFolder2ComboBox" FontFamily="OpenSans" FontSize="10" IsEnabled="False" HorizontalAlignment="Stretch" Height="25" VerticalContentAlignment="Center">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Label Content="{Binding FolderName}"  FontFamily="OpenSans" FontSize="10" FontWeight="Normal" Width="auto" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <!--<ComboBoxItem>
                                                <Label Content="Select Sub-Folder2" Style="{StaticResource lblUnboldStyle}" VerticalContentAlignment="Center"/>
                                            </ComboBoxItem>-->
                                            </ComboBox>
                                        </Grid>
                                    </Border>
                                    <Border  Width="154" BorderBrush="#FFC2E5F5" BorderThickness="1" Grid.Column="2">
                                        <Grid Margin="5 4 5 4" HorizontalAlignment="Center" VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock HorizontalAlignment="Left" FontWeight="SemiBold" FontFamily="OpenSans" FontSize="10"  Text="Client Accessible"></TextBlock>
                                            <!--<StackPanel Orientation="Horizontal" Grid.Row="1">-->
                                            <CheckBox TabIndex="11" x:Name="chkUntilDate" Grid.Row="1" FontFamily="OpenSans" Margin="0,5,0,0" FontSize="10" Content="Until Date:" VerticalAlignment="Center" VerticalContentAlignment="Center">
                                            </CheckBox>
                                            <DatePicker TabIndex="12" x:Name="DpAccesibility" Loaded="DpAccesibility_Loaded"  HorizontalAlignment="Left" Width="108" Height="22" Grid.Row="2" FontFamily="OpenSans" FontSize="10" Margin="0 5 0 0" VerticalContentAlignment="Center" IsEnabled="{Binding IsChecked,ElementName=chkUntilDate}">

                                            </DatePicker>
                                            <!--</StackPanel>-->
                                        </Grid>
                                    </Border>
                                    <Grid Grid.Row="1" Name="sendAndAttachGrid" Width="170" Grid.Column="2" Visibility="Visible">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition Width="0"></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>

                                        <Button TabIndex="13" IsEnabled="False" Visibility="Visible" FontFamily="OpenSans" FontSize="10"  Style="{StaticResource BtnAttachmentStyle}" Height="50" Width="70"  Grid.Row="0" Grid.Column="0" Margin="2,6,2,2" BorderBrush="Transparent" x:Name="btnSendAttachment" Click="btnSendAttachment_Click" >

                                            <!--<Button.Background>
                                    <ImageBrush ImageSource="/Asset/attach@3x.png" Stretch="Fill"/>
                                </Button.Background>-->
                                        </Button>

                                        <!--<Button Visibility="Collapsed"  Style="{StaticResource BtnAttachmentOnlyStyle}" Height="60" Width="80"  Grid.Row="0" Grid.Column="0" Margin="5" BorderBrush="Transparent" x:Name="btnAttachmentOnly" Click="btnAttachmentOnly_Click" />
                                    <Button Visibility="Collapsed"  Style="{StaticResource BtnAttachmentAndDeleteOnlyStyle}" Height="60" Width="80"  Grid.Column="2" Margin="5" BorderBrush="Transparent" x:Name="btnAttachmentAndDeleteOnly" Click="btnAttachmentAndDeleteOnly_Click" />-->

                                        <Button TabIndex="14" IsEnabled="False" Visibility="Visible" FontFamily="OpenSans" FontSize="10" x:Name="btnSendDeleteAndAttach" Click="btnSendDeleteAndAttach_Click" Grid.Row="1" Style="{StaticResource BtnDeleteAttachmentStyle}" Height="50" Width="70"  Grid.Column="2" Margin="2,6,2,2" BorderBrush="Transparent">

                                            <!--<Button.Background>
                                    <ImageBrush ImageSource="/Asset/attach-and-delete@3x.png" Stretch="Fill"/>
                                </Button.Background>-->

                                        </Button>
                                    </Grid>

                                    <Grid Name="multipleattachmentGrid" Visibility="Collapsed" Grid.Row="1" Grid.Column="2">
                                        <Button TabIndex="17" IsEnabled="False" x:Name="btnNext" Grid.Row="2" Width="70" Margin="0,0,22,0" Height="22" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Click="BtnNext_Click">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border Name="mainBorder" CornerRadius="2" Background="#0072cd">
                                                        <TextBlock Text="Next" FontWeight="SemiBold" Foreground="White" 
                                       HorizontalAlignment="Center"                                           
                                       Margin="0,5,0,0"
                                       Height="20" FontFamily="OpeSans"
                                       FontSize="10"></TextBlock>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter Property="Opacity" Value="0.5"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </Grid>

                                    <Grid Name="attachanddeleteonly" Width="170" Visibility="Collapsed" Grid.Row="1" Grid.Column="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition Width="0"></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Button TabIndex="15" Visibility="Visible" IsEnabled="False" Style="{StaticResource BtnAttachmentOnlyStyle}" Height="50" Width="70"  Grid.Row="0" Grid.Column="0" Margin="2,6,2,2" BorderBrush="Transparent" x:Name="btnAttachmentOnly" Click="btnAttachmentOnly_Click" />
                                        <Button TabIndex="16" Visibility="Visible" IsEnabled="False" Style="{StaticResource BtnAttachmentAndDeleteOnlyStyle}" Height="50" Width="70"  Grid.Column="2" Margin="2,6,2,2" BorderBrush="Transparent" x:Name="btnAttachmentAndDeleteOnly" Click="btnAttachmentAndDeleteOnly_Click" />
                                    </Grid>
                                </Grid>

                            </Grid>


                        </Grid>
                        <Label Grid.Row="3" Foreground="Red" Name="requiredFieldAlert" Content="Please fill required fields"  FontFamily="OpenSans" FontSize="10" Visibility="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20 0 0 0"/>
                        <Label Grid.Row="3" Name="validationFilterLabel" Foreground="RED" Visibility="Collapsed"  FontFamily="OpenSans" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Normal"  Margin="20,0,0,0" Content="Please enter at-least 3 characters"/>
                        <Grid Grid.Row="3" Name="FailureAlertGrid" HorizontalAlignment="Right" Margin="0,0,50,0">
                            <!--<TextBlock Text="Activity saved,will update the EPIC soon." x:Name="TxtblSucessMessage" Visibility="Collapsed" HorizontalAlignment="Right" Margin="0 0 50 0" Foreground="Red" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style  TargetType="{x:Type TextBlock}">
                                    <Style.Resources>
                                        <Storyboard x:Key="FadeStoryboard">
                                            <DoubleAnimation Storyboard.TargetProperty="(TextBlock.Opacity)" 
                                From="0" To="1" Duration="0:0:0.5"
                                RepeatBehavior="Forever" AutoReverse="True"/>
                                        </Storyboard>
                                    </Style.Resources>
                                    <Style.Triggers>
                                        <Trigger Property="Visibility" Value="Visible" >
                                            <Trigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource FadeStoryboard}"/>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="lbl_UserName" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                        
                                                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:5"  Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:5" Value="{x:Static Visibility.Collapsed}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>-->
                        </Grid>


                    </Grid>
                </Grid>
            </Border>


            <Popup HorizontalAlignment="Right" StaysOpen="False" PlacementTarget="{Binding ElementName=btnFavouriteList}" HorizontalOffset="-115" VerticalOffset="-5" IsOpen="False"  VerticalAlignment="Center"  x:Name="BookMarkListPopupDetails"  AllowsTransparency="True" IsHitTestVisible="True" >
                <Grid Width="250" Height="223">
                    <Grid.Background>
                        <ImageBrush ImageSource="./Asset/rounded-rectangle-1-copy@2x.png" Stretch="Fill" />
                    </Grid.Background>
                    <Grid Margin="10 20 5 15" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="Favorite List" FontFamily="OpenSans" Foreground="#FF0072cd"></Label>
                        <ListBox x:Name="LstFavouriteList" FontFamily="OpenSans" FontSize="10" HorizontalAlignment="Stretch" SelectionChanged="LstFavouriteList_SelectionChanged" ItemContainerStyle="{StaticResource FavouriteListitem}" Margin="5" Width="225" Grid.Row="1" BorderBrush="Transparent" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Hidden" >
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid  Height="30" Width="200">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="32"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock ToolTip="{Binding FavourtieName}" Text="{Binding FavourtieName}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Width="Auto" />
                                        <cc:CustomButton Cursor="Hand" Grid.Column="1" Margin="0,0,2,0" HorizontalAlignment="Right" x:Name="btnFavouriteDelete" Click="btnFavouriteDelete_Click" BorderThickness="0" BackgroundImage="./Asset/fav-close.png" BorderBrush="Transparent"  Width="16" Height="16" Content="Search"></cc:CustomButton>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </Grid>
            </Popup>

            <Popup HorizontalAlignment="Right" StaysOpen="False" PlacementTarget="{Binding ElementName=TbtnFavouites}" HorizontalOffset="-135" VerticalOffset="0" IsOpen="False"  VerticalAlignment="Center"  x:Name="BookMarkListPopup"  AllowsTransparency="True" IsHitTestVisible="True" >
                <Grid Width="300" Height="142">
                    <Grid.Background>
                        <ImageBrush ImageSource="./Asset/rounded-rectangle-1-copy@2x.png" Stretch="Fill" />
                    </Grid.Background>
                    <Grid Margin="15 15 20 15">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="10"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="10"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="Add Favorite" FontFamily="OpenSans"  Foreground="#FF0072cd"></Label>
                        <Grid  Grid.Row="2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Label Content="Name:" FontFamily="OpenSans"></Label>
                            <TextBox Name="favouriteNameTextBox" FontFamily="OpenSans" Height="30" Grid.Column="2" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" />
                        </Grid>
                        <StackPanel Orientation="Horizontal" Grid.Row="4" HorizontalAlignment="Right">
                            <cc:CustomButton Grid.Column="0" Click="btnDone_Click" HorizontalAlignment="Left" x:Name="btnDone"  BorderThickness="0" BackgroundImage="./Asset/done@2x.png" BorderBrush="Transparent"  Width="60" Height="30" Content="Search"  Margin="0 -3 0 0"></cc:CustomButton>
                            <cc:CustomButton Grid.Column="0" Click="btnCancel_Click" HorizontalAlignment="Left" x:Name="btnCancel" Margin="10 0 0 0" BorderThickness="0" BackgroundImage="./Asset/cancel@2x.png" BorderBrush="Transparent"  Width="60" Height="30" Content="Search"></cc:CustomButton>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Popup>


            <!--<Popup HorizontalAlignment="Right" StaysOpen="False" PlacementTarget="{Binding ElementName=BtnPolicyType}" HorizontalOffset="-70" VerticalOffset="0" IsOpen="False"  VerticalAlignment="Center"  x:Name="PolicyTypePopup"  AllowsTransparency="True" IsHitTestVisible="True" >
            <Grid Width="250" Height="223">
                <Grid.Background>
                    <ImageBrush ImageSource="./Asset/rounded-rectangle-1-copy@2x.png" Stretch="Fill" />
                </Grid.Background>
                <Grid Margin="15 15 10 15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="5"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0"  Content="Policy Type"  Margin="0 10 0 0" Foreground="#FF0072cd"></Label>
                    <ListBox x:Name="PolicyList" Grid.Row="2" SelectionChanged="PolicyList_SelectionChanged" ItemContainerStyle="{StaticResource PolicyTypeListItem}"  BorderBrush="Transparent"  ScrollViewer.HorizontalScrollBarVisibility="Hidden" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid  Height="25" Width="{Binding ActualWidth,ElementName=PolicyList}">
                                    <TextBlock Grid.Column="1" Text="{Binding PolicyCode}" VerticalAlignment="Center" Margin="10 0 0 0" TextTrimming="WordEllipsis" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>

            </Grid>
        </Popup>-->
            <Grid x:Name="grdBackOverLay" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Black" Opacity="0.5"  Panel.ZIndex="1000" Visibility="Collapsed">

            </Grid>

            <!--<vsm:TextBox x:Name="textBox" HorizontalAlignment="Left" Height="23" Margin="620,272,-182.4,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="120"/>-->
        </Grid>
    </Grid>
    <!--</ScrollViewer>-->
</UserControl>
